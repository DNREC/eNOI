'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace OnlinePay
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="OnlinePayServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class OnlinePayService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SessionInitiateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SessionInitiateVer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SessionVerificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SessionVerificationVer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SessionNotificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SessionNotificationVer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AcceptBillingAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBillingAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBillingDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAmountPaidByOrderNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionsByOrderNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionsForDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAppRelatedDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFailCodeDescByRemittanceIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFailCodeByRemittanceIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAmountPaidByRemittanceIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAVSCodeDescByRemittanceIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddApplicationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Application_AddParamByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Application_GetParamValueByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Application_AddParamByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Application_GetParamValueByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Application_GetDescByFailCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Application_GetDescByAVSCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.NoticeOfIntent.My.MySettings.Default.NoticeOfIntent_OnlinePay_OnlinePayService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SessionInitiateCompleted As SessionInitiateCompletedEventHandler
        
        '''<remarks/>
        Public Event SessionInitiateVer2Completed As SessionInitiateVer2CompletedEventHandler
        
        '''<remarks/>
        Public Event SessionVerificationCompleted As SessionVerificationCompletedEventHandler
        
        '''<remarks/>
        Public Event SessionVerificationVer2Completed As SessionVerificationVer2CompletedEventHandler
        
        '''<remarks/>
        Public Event SessionNotificationCompleted As SessionNotificationCompletedEventHandler
        
        '''<remarks/>
        Public Event SessionNotificationVer2Completed As SessionNotificationVer2CompletedEventHandler
        
        '''<remarks/>
        Public Event AcceptBillingAddressCompleted As AcceptBillingAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBillingAddressCompleted As GetBillingAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBillingDetailsCompleted As GetBillingDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAmountPaidByOrderNumberCompleted As GetAmountPaidByOrderNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionsByOrderNumberCompleted As GetTransactionsByOrderNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionsForDateRangeCompleted As GetTransactionsForDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAppRelatedDataCompleted As GetAppRelatedDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFailCodeDescByRemittanceIDCompleted As GetFailCodeDescByRemittanceIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFailCodeByRemittanceIDCompleted As GetFailCodeByRemittanceIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAmountPaidByRemittanceIDCompleted As GetAmountPaidByRemittanceIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAVSCodeDescByRemittanceIDCompleted As GetAVSCodeDescByRemittanceIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionDetailsCompleted As GetTransactionDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddApplicationCompleted As AddApplicationCompletedEventHandler
        
        '''<remarks/>
        Public Event Application_AddParamByIDCompleted As Application_AddParamByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event Application_GetParamValueByIDCompleted As Application_GetParamValueByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event Application_AddParamByNameCompleted As Application_AddParamByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event Application_GetParamValueByNameCompleted As Application_GetParamValueByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event Application_GetDescByFailCodeCompleted As Application_GetDescByFailCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event Application_GetDescByAVSCodeCompleted As Application_GetDescByAVSCodeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SessionInitiate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SessionInitiate(ByVal application_id As Integer, ByVal message_version As String, ByVal email As String, ByVal OrderNumber As String) As String
            Dim results() As Object = Me.Invoke("SessionInitiate", New Object() {application_id, message_version, email, OrderNumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SessionInitiateAsync(ByVal application_id As Integer, ByVal message_version As String, ByVal email As String, ByVal OrderNumber As String)
            Me.SessionInitiateAsync(application_id, message_version, email, OrderNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SessionInitiateAsync(ByVal application_id As Integer, ByVal message_version As String, ByVal email As String, ByVal OrderNumber As String, ByVal userState As Object)
            If (Me.SessionInitiateOperationCompleted Is Nothing) Then
                Me.SessionInitiateOperationCompleted = AddressOf Me.OnSessionInitiateOperationCompleted
            End If
            Me.InvokeAsync("SessionInitiate", New Object() {application_id, message_version, email, OrderNumber}, Me.SessionInitiateOperationCompleted, userState)
        End Sub
        
        Private Sub OnSessionInitiateOperationCompleted(ByVal arg As Object)
            If (Not (Me.SessionInitiateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SessionInitiateCompleted(Me, New SessionInitiateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SessionInitiateVer2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SessionInitiateVer2( _
                    ByVal application_id As Integer,  _
                    ByVal message_version As String,  _
                    ByVal OrderNumber As String,  _
                    ByVal basefee As Decimal,  _
                    ByVal convfee As Decimal,  _
                    ByVal flatfee As Decimal,  _
                    ByVal varfee As Decimal,  _
                    ByVal totalfee As Decimal,  _
                    ByVal email As String,  _
                    ByVal BilleeFName As String,  _
                    ByVal BilleeLName As String,  _
                    ByVal BilleeAddress As String,  _
                    ByVal BilleeCity As String,  _
                    ByVal BilleeState As String,  _
                    ByVal BilleeZip As String,  _
                    ByVal apprelateddata As String) As String
            Dim results() As Object = Me.Invoke("SessionInitiateVer2", New Object() {application_id, message_version, OrderNumber, basefee, convfee, flatfee, varfee, totalfee, email, BilleeFName, BilleeLName, BilleeAddress, BilleeCity, BilleeState, BilleeZip, apprelateddata})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SessionInitiateVer2Async( _
                    ByVal application_id As Integer,  _
                    ByVal message_version As String,  _
                    ByVal OrderNumber As String,  _
                    ByVal basefee As Decimal,  _
                    ByVal convfee As Decimal,  _
                    ByVal flatfee As Decimal,  _
                    ByVal varfee As Decimal,  _
                    ByVal totalfee As Decimal,  _
                    ByVal email As String,  _
                    ByVal BilleeFName As String,  _
                    ByVal BilleeLName As String,  _
                    ByVal BilleeAddress As String,  _
                    ByVal BilleeCity As String,  _
                    ByVal BilleeState As String,  _
                    ByVal BilleeZip As String,  _
                    ByVal apprelateddata As String)
            Me.SessionInitiateVer2Async(application_id, message_version, OrderNumber, basefee, convfee, flatfee, varfee, totalfee, email, BilleeFName, BilleeLName, BilleeAddress, BilleeCity, BilleeState, BilleeZip, apprelateddata, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SessionInitiateVer2Async( _
                    ByVal application_id As Integer,  _
                    ByVal message_version As String,  _
                    ByVal OrderNumber As String,  _
                    ByVal basefee As Decimal,  _
                    ByVal convfee As Decimal,  _
                    ByVal flatfee As Decimal,  _
                    ByVal varfee As Decimal,  _
                    ByVal totalfee As Decimal,  _
                    ByVal email As String,  _
                    ByVal BilleeFName As String,  _
                    ByVal BilleeLName As String,  _
                    ByVal BilleeAddress As String,  _
                    ByVal BilleeCity As String,  _
                    ByVal BilleeState As String,  _
                    ByVal BilleeZip As String,  _
                    ByVal apprelateddata As String,  _
                    ByVal userState As Object)
            If (Me.SessionInitiateVer2OperationCompleted Is Nothing) Then
                Me.SessionInitiateVer2OperationCompleted = AddressOf Me.OnSessionInitiateVer2OperationCompleted
            End If
            Me.InvokeAsync("SessionInitiateVer2", New Object() {application_id, message_version, OrderNumber, basefee, convfee, flatfee, varfee, totalfee, email, BilleeFName, BilleeLName, BilleeAddress, BilleeCity, BilleeState, BilleeZip, apprelateddata}, Me.SessionInitiateVer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSessionInitiateVer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SessionInitiateVer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SessionInitiateVer2Completed(Me, New SessionInitiateVer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SessionVerification", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SessionVerification(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Double) As Integer
            Dim results() As Object = Me.Invoke("SessionVerification", New Object() {application_id, message_version, remittance_id, security_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SessionVerificationAsync(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Double)
            Me.SessionVerificationAsync(application_id, message_version, remittance_id, security_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SessionVerificationAsync(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Double, ByVal userState As Object)
            If (Me.SessionVerificationOperationCompleted Is Nothing) Then
                Me.SessionVerificationOperationCompleted = AddressOf Me.OnSessionVerificationOperationCompleted
            End If
            Me.InvokeAsync("SessionVerification", New Object() {application_id, message_version, remittance_id, security_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount}, Me.SessionVerificationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSessionVerificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SessionVerificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SessionVerificationCompleted(Me, New SessionVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SessionVerificationVer2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SessionVerificationVer2(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String) As Boolean
            Dim results() As Object = Me.Invoke("SessionVerificationVer2", New Object() {application_id, message_version, remittance_id, security_id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SessionVerificationVer2Async(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String)
            Me.SessionVerificationVer2Async(application_id, message_version, remittance_id, security_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SessionVerificationVer2Async(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal userState As Object)
            If (Me.SessionVerificationVer2OperationCompleted Is Nothing) Then
                Me.SessionVerificationVer2OperationCompleted = AddressOf Me.OnSessionVerificationVer2OperationCompleted
            End If
            Me.InvokeAsync("SessionVerificationVer2", New Object() {application_id, message_version, remittance_id, security_id}, Me.SessionVerificationVer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSessionVerificationVer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SessionVerificationVer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SessionVerificationVer2Completed(Me, New SessionVerificationVer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SessionNotification", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SessionNotification(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal transaction_event As String, ByVal transaction_status As Integer, ByVal transaction_detail As String, ByVal avs_response As String, ByVal fail_code As Integer, ByVal payment_type As String, ByVal amount As Double, ByVal convenience_fee_amount As Double, ByVal total_amount As Double) As Integer
            Dim results() As Object = Me.Invoke("SessionNotification", New Object() {application_id, message_version, remittance_id, security_id, transaction_event, transaction_status, transaction_detail, avs_response, fail_code, payment_type, amount, convenience_fee_amount, total_amount})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SessionNotificationAsync(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal transaction_event As String, ByVal transaction_status As Integer, ByVal transaction_detail As String, ByVal avs_response As String, ByVal fail_code As Integer, ByVal payment_type As String, ByVal amount As Double, ByVal convenience_fee_amount As Double, ByVal total_amount As Double)
            Me.SessionNotificationAsync(application_id, message_version, remittance_id, security_id, transaction_event, transaction_status, transaction_detail, avs_response, fail_code, payment_type, amount, convenience_fee_amount, total_amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SessionNotificationAsync(ByVal application_id As Integer, ByVal message_version As String, ByVal remittance_id As String, ByVal security_id As String, ByVal transaction_event As String, ByVal transaction_status As Integer, ByVal transaction_detail As String, ByVal avs_response As String, ByVal fail_code As Integer, ByVal payment_type As String, ByVal amount As Double, ByVal convenience_fee_amount As Double, ByVal total_amount As Double, ByVal userState As Object)
            If (Me.SessionNotificationOperationCompleted Is Nothing) Then
                Me.SessionNotificationOperationCompleted = AddressOf Me.OnSessionNotificationOperationCompleted
            End If
            Me.InvokeAsync("SessionNotification", New Object() {application_id, message_version, remittance_id, security_id, transaction_event, transaction_status, transaction_detail, avs_response, fail_code, payment_type, amount, convenience_fee_amount, total_amount}, Me.SessionNotificationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSessionNotificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SessionNotificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SessionNotificationCompleted(Me, New SessionNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SessionNotificationVer2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SessionNotificationVer2( _
                    ByVal application_id As Integer,  _
                    ByVal message_version As String,  _
                    ByVal remittance_id As String,  _
                    ByVal security_id As String,  _
                    ByVal transaction_status As Integer,  _
                    ByVal avs_response As String,  _
                    ByVal fail_code As Integer,  _
                    ByVal payment_type As String,  _
                    ByVal card_type As String,  _
                    ByVal amount As Double,  _
                    ByVal convenience_fee_amount As Double,  _
                    ByVal total_amount As Double,  _
                    ByVal BFName As String,  _
                    ByVal BLName As String,  _
                    ByVal BAddress As String,  _
                    ByVal BCity As String,  _
                    ByVal BState As String,  _
                    ByVal BZip As String) As Boolean
            Dim results() As Object = Me.Invoke("SessionNotificationVer2", New Object() {application_id, message_version, remittance_id, security_id, transaction_status, avs_response, fail_code, payment_type, card_type, amount, convenience_fee_amount, total_amount, BFName, BLName, BAddress, BCity, BState, BZip})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SessionNotificationVer2Async( _
                    ByVal application_id As Integer,  _
                    ByVal message_version As String,  _
                    ByVal remittance_id As String,  _
                    ByVal security_id As String,  _
                    ByVal transaction_status As Integer,  _
                    ByVal avs_response As String,  _
                    ByVal fail_code As Integer,  _
                    ByVal payment_type As String,  _
                    ByVal card_type As String,  _
                    ByVal amount As Double,  _
                    ByVal convenience_fee_amount As Double,  _
                    ByVal total_amount As Double,  _
                    ByVal BFName As String,  _
                    ByVal BLName As String,  _
                    ByVal BAddress As String,  _
                    ByVal BCity As String,  _
                    ByVal BState As String,  _
                    ByVal BZip As String)
            Me.SessionNotificationVer2Async(application_id, message_version, remittance_id, security_id, transaction_status, avs_response, fail_code, payment_type, card_type, amount, convenience_fee_amount, total_amount, BFName, BLName, BAddress, BCity, BState, BZip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SessionNotificationVer2Async( _
                    ByVal application_id As Integer,  _
                    ByVal message_version As String,  _
                    ByVal remittance_id As String,  _
                    ByVal security_id As String,  _
                    ByVal transaction_status As Integer,  _
                    ByVal avs_response As String,  _
                    ByVal fail_code As Integer,  _
                    ByVal payment_type As String,  _
                    ByVal card_type As String,  _
                    ByVal amount As Double,  _
                    ByVal convenience_fee_amount As Double,  _
                    ByVal total_amount As Double,  _
                    ByVal BFName As String,  _
                    ByVal BLName As String,  _
                    ByVal BAddress As String,  _
                    ByVal BCity As String,  _
                    ByVal BState As String,  _
                    ByVal BZip As String,  _
                    ByVal userState As Object)
            If (Me.SessionNotificationVer2OperationCompleted Is Nothing) Then
                Me.SessionNotificationVer2OperationCompleted = AddressOf Me.OnSessionNotificationVer2OperationCompleted
            End If
            Me.InvokeAsync("SessionNotificationVer2", New Object() {application_id, message_version, remittance_id, security_id, transaction_status, avs_response, fail_code, payment_type, card_type, amount, convenience_fee_amount, total_amount, BFName, BLName, BAddress, BCity, BState, BZip}, Me.SessionNotificationVer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSessionNotificationVer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SessionNotificationVer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SessionNotificationVer2Completed(Me, New SessionNotificationVer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AcceptBillingAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AcceptBillingAddress(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal) As Integer
            Dim results() As Object = Me.Invoke("AcceptBillingAddress", New Object() {application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AcceptBillingAddressAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal)
            Me.AcceptBillingAddressAsync(application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AcceptBillingAddressAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal, ByVal userState As Object)
            If (Me.AcceptBillingAddressOperationCompleted Is Nothing) Then
                Me.AcceptBillingAddressOperationCompleted = AddressOf Me.OnAcceptBillingAddressOperationCompleted
            End If
            Me.InvokeAsync("AcceptBillingAddress", New Object() {application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount}, Me.AcceptBillingAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnAcceptBillingAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.AcceptBillingAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AcceptBillingAddressCompleted(Me, New AcceptBillingAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillingAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBillingAddress(ByVal application_id As Integer, ByVal remittance_id As String, ByRef BFName As String, ByRef BLName As String, ByRef BAddress As String, ByRef BCity As String, ByRef BState As String, ByRef BZip As String, ByRef Amount As Decimal) As Boolean
            Dim results() As Object = Me.Invoke("GetBillingAddress", New Object() {application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount})
            BFName = CType(results(1),String)
            BLName = CType(results(2),String)
            BAddress = CType(results(3),String)
            BCity = CType(results(4),String)
            BState = CType(results(5),String)
            BZip = CType(results(6),String)
            Amount = CType(results(7),Decimal)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBillingAddressAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal)
            Me.GetBillingAddressAsync(application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBillingAddressAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal, ByVal userState As Object)
            If (Me.GetBillingAddressOperationCompleted Is Nothing) Then
                Me.GetBillingAddressOperationCompleted = AddressOf Me.OnGetBillingAddressOperationCompleted
            End If
            Me.InvokeAsync("GetBillingAddress", New Object() {application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount}, Me.GetBillingAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBillingAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBillingAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBillingAddressCompleted(Me, New GetBillingAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillingDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBillingDetails(ByVal application_id As Integer, ByVal remittance_id As String, ByRef BFName As String, ByRef BLName As String, ByRef BAddress As String, ByRef BCity As String, ByRef BState As String, ByRef BZip As String, ByRef Amount As Decimal, ByRef OrderNumber As String) As Boolean
            Dim results() As Object = Me.Invoke("GetBillingDetails", New Object() {application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount, OrderNumber})
            BFName = CType(results(1),String)
            BLName = CType(results(2),String)
            BAddress = CType(results(3),String)
            BCity = CType(results(4),String)
            BState = CType(results(5),String)
            BZip = CType(results(6),String)
            Amount = CType(results(7),Decimal)
            OrderNumber = CType(results(8),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBillingDetailsAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal, ByVal OrderNumber As String)
            Me.GetBillingDetailsAsync(application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount, OrderNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBillingDetailsAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal BFName As String, ByVal BLName As String, ByVal BAddress As String, ByVal BCity As String, ByVal BState As String, ByVal BZip As String, ByVal Amount As Decimal, ByVal OrderNumber As String, ByVal userState As Object)
            If (Me.GetBillingDetailsOperationCompleted Is Nothing) Then
                Me.GetBillingDetailsOperationCompleted = AddressOf Me.OnGetBillingDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetBillingDetails", New Object() {application_id, remittance_id, BFName, BLName, BAddress, BCity, BState, BZip, Amount, OrderNumber}, Me.GetBillingDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBillingDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBillingDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBillingDetailsCompleted(Me, New GetBillingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAmountPaidByOrderNumber", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAmountPaidByOrderNumber(ByVal application_id As Integer, ByVal OrderNumber As String) As Decimal
            Dim results() As Object = Me.Invoke("GetAmountPaidByOrderNumber", New Object() {application_id, OrderNumber})
            Return CType(results(0),Decimal)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAmountPaidByOrderNumberAsync(ByVal application_id As Integer, ByVal OrderNumber As String)
            Me.GetAmountPaidByOrderNumberAsync(application_id, OrderNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAmountPaidByOrderNumberAsync(ByVal application_id As Integer, ByVal OrderNumber As String, ByVal userState As Object)
            If (Me.GetAmountPaidByOrderNumberOperationCompleted Is Nothing) Then
                Me.GetAmountPaidByOrderNumberOperationCompleted = AddressOf Me.OnGetAmountPaidByOrderNumberOperationCompleted
            End If
            Me.InvokeAsync("GetAmountPaidByOrderNumber", New Object() {application_id, OrderNumber}, Me.GetAmountPaidByOrderNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAmountPaidByOrderNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAmountPaidByOrderNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAmountPaidByOrderNumberCompleted(Me, New GetAmountPaidByOrderNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionsByOrderNumber", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionsByOrderNumber(ByVal application_id As Integer, ByVal ordernumber As String) As String
            Dim results() As Object = Me.Invoke("GetTransactionsByOrderNumber", New Object() {application_id, ordernumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionsByOrderNumberAsync(ByVal application_id As Integer, ByVal ordernumber As String)
            Me.GetTransactionsByOrderNumberAsync(application_id, ordernumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionsByOrderNumberAsync(ByVal application_id As Integer, ByVal ordernumber As String, ByVal userState As Object)
            If (Me.GetTransactionsByOrderNumberOperationCompleted Is Nothing) Then
                Me.GetTransactionsByOrderNumberOperationCompleted = AddressOf Me.OnGetTransactionsByOrderNumberOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionsByOrderNumber", New Object() {application_id, ordernumber}, Me.GetTransactionsByOrderNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionsByOrderNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionsByOrderNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionsByOrderNumberCompleted(Me, New GetTransactionsByOrderNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionsForDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionsForDateRange(ByVal application_id As Integer, ByVal fromdate As Date, ByVal todate As Date) As String
            Dim results() As Object = Me.Invoke("GetTransactionsForDateRange", New Object() {application_id, fromdate, todate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionsForDateRangeAsync(ByVal application_id As Integer, ByVal fromdate As Date, ByVal todate As Date)
            Me.GetTransactionsForDateRangeAsync(application_id, fromdate, todate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionsForDateRangeAsync(ByVal application_id As Integer, ByVal fromdate As Date, ByVal todate As Date, ByVal userState As Object)
            If (Me.GetTransactionsForDateRangeOperationCompleted Is Nothing) Then
                Me.GetTransactionsForDateRangeOperationCompleted = AddressOf Me.OnGetTransactionsForDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionsForDateRange", New Object() {application_id, fromdate, todate}, Me.GetTransactionsForDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionsForDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionsForDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionsForDateRangeCompleted(Me, New GetTransactionsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppRelatedData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAppRelatedData(ByVal remittanceid As String) As String
            Dim results() As Object = Me.Invoke("GetAppRelatedData", New Object() {remittanceid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAppRelatedDataAsync(ByVal remittanceid As String)
            Me.GetAppRelatedDataAsync(remittanceid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAppRelatedDataAsync(ByVal remittanceid As String, ByVal userState As Object)
            If (Me.GetAppRelatedDataOperationCompleted Is Nothing) Then
                Me.GetAppRelatedDataOperationCompleted = AddressOf Me.OnGetAppRelatedDataOperationCompleted
            End If
            Me.InvokeAsync("GetAppRelatedData", New Object() {remittanceid}, Me.GetAppRelatedDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAppRelatedDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAppRelatedDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAppRelatedDataCompleted(Me, New GetAppRelatedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFailCodeDescByRemittanceID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFailCodeDescByRemittanceID(ByVal remittanceid As String) As String
            Dim results() As Object = Me.Invoke("GetFailCodeDescByRemittanceID", New Object() {remittanceid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFailCodeDescByRemittanceIDAsync(ByVal remittanceid As String)
            Me.GetFailCodeDescByRemittanceIDAsync(remittanceid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFailCodeDescByRemittanceIDAsync(ByVal remittanceid As String, ByVal userState As Object)
            If (Me.GetFailCodeDescByRemittanceIDOperationCompleted Is Nothing) Then
                Me.GetFailCodeDescByRemittanceIDOperationCompleted = AddressOf Me.OnGetFailCodeDescByRemittanceIDOperationCompleted
            End If
            Me.InvokeAsync("GetFailCodeDescByRemittanceID", New Object() {remittanceid}, Me.GetFailCodeDescByRemittanceIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFailCodeDescByRemittanceIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFailCodeDescByRemittanceIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFailCodeDescByRemittanceIDCompleted(Me, New GetFailCodeDescByRemittanceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFailCodeByRemittanceID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFailCodeByRemittanceID(ByVal remittanceid As String) As Integer
            Dim results() As Object = Me.Invoke("GetFailCodeByRemittanceID", New Object() {remittanceid})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFailCodeByRemittanceIDAsync(ByVal remittanceid As String)
            Me.GetFailCodeByRemittanceIDAsync(remittanceid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFailCodeByRemittanceIDAsync(ByVal remittanceid As String, ByVal userState As Object)
            If (Me.GetFailCodeByRemittanceIDOperationCompleted Is Nothing) Then
                Me.GetFailCodeByRemittanceIDOperationCompleted = AddressOf Me.OnGetFailCodeByRemittanceIDOperationCompleted
            End If
            Me.InvokeAsync("GetFailCodeByRemittanceID", New Object() {remittanceid}, Me.GetFailCodeByRemittanceIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFailCodeByRemittanceIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFailCodeByRemittanceIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFailCodeByRemittanceIDCompleted(Me, New GetFailCodeByRemittanceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAmountPaidByRemittanceID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAmountPaidByRemittanceID(ByVal remittanceid As String) As Decimal
            Dim results() As Object = Me.Invoke("GetAmountPaidByRemittanceID", New Object() {remittanceid})
            Return CType(results(0),Decimal)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAmountPaidByRemittanceIDAsync(ByVal remittanceid As String)
            Me.GetAmountPaidByRemittanceIDAsync(remittanceid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAmountPaidByRemittanceIDAsync(ByVal remittanceid As String, ByVal userState As Object)
            If (Me.GetAmountPaidByRemittanceIDOperationCompleted Is Nothing) Then
                Me.GetAmountPaidByRemittanceIDOperationCompleted = AddressOf Me.OnGetAmountPaidByRemittanceIDOperationCompleted
            End If
            Me.InvokeAsync("GetAmountPaidByRemittanceID", New Object() {remittanceid}, Me.GetAmountPaidByRemittanceIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAmountPaidByRemittanceIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAmountPaidByRemittanceIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAmountPaidByRemittanceIDCompleted(Me, New GetAmountPaidByRemittanceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAVSCodeDescByRemittanceID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAVSCodeDescByRemittanceID(ByVal remittanceid As String) As String
            Dim results() As Object = Me.Invoke("GetAVSCodeDescByRemittanceID", New Object() {remittanceid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAVSCodeDescByRemittanceIDAsync(ByVal remittanceid As String)
            Me.GetAVSCodeDescByRemittanceIDAsync(remittanceid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAVSCodeDescByRemittanceIDAsync(ByVal remittanceid As String, ByVal userState As Object)
            If (Me.GetAVSCodeDescByRemittanceIDOperationCompleted Is Nothing) Then
                Me.GetAVSCodeDescByRemittanceIDOperationCompleted = AddressOf Me.OnGetAVSCodeDescByRemittanceIDOperationCompleted
            End If
            Me.InvokeAsync("GetAVSCodeDescByRemittanceID", New Object() {remittanceid}, Me.GetAVSCodeDescByRemittanceIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAVSCodeDescByRemittanceIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAVSCodeDescByRemittanceIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAVSCodeDescByRemittanceIDCompleted(Me, New GetAVSCodeDescByRemittanceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionDetails(ByVal application_id As Integer, ByVal remittance_id As String, ByRef transactiondate As Date, ByRef paymentdesc As String, ByRef cardtype As String, ByRef totalamount As Decimal, ByRef application_desc As String, ByRef application_address As String, ByRef application_city As String, ByRef application_state As String, ByRef application_zip As String, ByRef application_phone As String) As Boolean
            Dim results() As Object = Me.Invoke("GetTransactionDetails", New Object() {application_id, remittance_id, transactiondate, paymentdesc, cardtype, totalamount, application_desc, application_address, application_city, application_state, application_zip, application_phone})
            transactiondate = CType(results(1),Date)
            paymentdesc = CType(results(2),String)
            cardtype = CType(results(3),String)
            totalamount = CType(results(4),Decimal)
            application_desc = CType(results(5),String)
            application_address = CType(results(6),String)
            application_city = CType(results(7),String)
            application_state = CType(results(8),String)
            application_zip = CType(results(9),String)
            application_phone = CType(results(10),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionDetailsAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal transactiondate As Date, ByVal paymentdesc As String, ByVal cardtype As String, ByVal totalamount As Decimal, ByVal application_desc As String, ByVal application_address As String, ByVal application_city As String, ByVal application_state As String, ByVal application_zip As String, ByVal application_phone As String)
            Me.GetTransactionDetailsAsync(application_id, remittance_id, transactiondate, paymentdesc, cardtype, totalamount, application_desc, application_address, application_city, application_state, application_zip, application_phone, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionDetailsAsync(ByVal application_id As Integer, ByVal remittance_id As String, ByVal transactiondate As Date, ByVal paymentdesc As String, ByVal cardtype As String, ByVal totalamount As Decimal, ByVal application_desc As String, ByVal application_address As String, ByVal application_city As String, ByVal application_state As String, ByVal application_zip As String, ByVal application_phone As String, ByVal userState As Object)
            If (Me.GetTransactionDetailsOperationCompleted Is Nothing) Then
                Me.GetTransactionDetailsOperationCompleted = AddressOf Me.OnGetTransactionDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionDetails", New Object() {application_id, remittance_id, transactiondate, paymentdesc, cardtype, totalamount, application_desc, application_address, application_city, application_state, application_zip, application_phone}, Me.GetTransactionDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionDetailsCompleted(Me, New GetTransactionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddApplication", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AddApplication(ByVal AppID As Integer, ByVal AppName As String, ByVal PaymentName As String)
            Me.Invoke("AddApplication", New Object() {AppID, AppName, PaymentName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddApplicationAsync(ByVal AppID As Integer, ByVal AppName As String, ByVal PaymentName As String)
            Me.AddApplicationAsync(AppID, AppName, PaymentName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddApplicationAsync(ByVal AppID As Integer, ByVal AppName As String, ByVal PaymentName As String, ByVal userState As Object)
            If (Me.AddApplicationOperationCompleted Is Nothing) Then
                Me.AddApplicationOperationCompleted = AddressOf Me.OnAddApplicationOperationCompleted
            End If
            Me.InvokeAsync("AddApplication", New Object() {AppID, AppName, PaymentName}, Me.AddApplicationOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddApplicationOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddApplicationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddApplicationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Application_AddParamByID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Application_AddParamByID(ByVal AppID As Integer, ByVal ParamValue As String, ByVal AppParamTypeID As Integer)
            Me.Invoke("Application_AddParamByID", New Object() {AppID, ParamValue, AppParamTypeID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_AddParamByIDAsync(ByVal AppID As Integer, ByVal ParamValue As String, ByVal AppParamTypeID As Integer)
            Me.Application_AddParamByIDAsync(AppID, ParamValue, AppParamTypeID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_AddParamByIDAsync(ByVal AppID As Integer, ByVal ParamValue As String, ByVal AppParamTypeID As Integer, ByVal userState As Object)
            If (Me.Application_AddParamByIDOperationCompleted Is Nothing) Then
                Me.Application_AddParamByIDOperationCompleted = AddressOf Me.OnApplication_AddParamByIDOperationCompleted
            End If
            Me.InvokeAsync("Application_AddParamByID", New Object() {AppID, ParamValue, AppParamTypeID}, Me.Application_AddParamByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplication_AddParamByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.Application_AddParamByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Application_AddParamByIDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Application_GetParamValueByID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Application_GetParamValueByID(ByVal AppID As Integer, ByVal AppParamTypeID As Integer) As String
            Dim results() As Object = Me.Invoke("Application_GetParamValueByID", New Object() {AppID, AppParamTypeID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Application_GetParamValueByIDAsync(ByVal AppID As Integer, ByVal AppParamTypeID As Integer)
            Me.Application_GetParamValueByIDAsync(AppID, AppParamTypeID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_GetParamValueByIDAsync(ByVal AppID As Integer, ByVal AppParamTypeID As Integer, ByVal userState As Object)
            If (Me.Application_GetParamValueByIDOperationCompleted Is Nothing) Then
                Me.Application_GetParamValueByIDOperationCompleted = AddressOf Me.OnApplication_GetParamValueByIDOperationCompleted
            End If
            Me.InvokeAsync("Application_GetParamValueByID", New Object() {AppID, AppParamTypeID}, Me.Application_GetParamValueByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplication_GetParamValueByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.Application_GetParamValueByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Application_GetParamValueByIDCompleted(Me, New Application_GetParamValueByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Application_AddParamByName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Application_AddParamByName(ByVal AppID As Integer, ByVal ParamValue As String, ByVal ParamDescription As String)
            Me.Invoke("Application_AddParamByName", New Object() {AppID, ParamValue, ParamDescription})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_AddParamByNameAsync(ByVal AppID As Integer, ByVal ParamValue As String, ByVal ParamDescription As String)
            Me.Application_AddParamByNameAsync(AppID, ParamValue, ParamDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_AddParamByNameAsync(ByVal AppID As Integer, ByVal ParamValue As String, ByVal ParamDescription As String, ByVal userState As Object)
            If (Me.Application_AddParamByNameOperationCompleted Is Nothing) Then
                Me.Application_AddParamByNameOperationCompleted = AddressOf Me.OnApplication_AddParamByNameOperationCompleted
            End If
            Me.InvokeAsync("Application_AddParamByName", New Object() {AppID, ParamValue, ParamDescription}, Me.Application_AddParamByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplication_AddParamByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.Application_AddParamByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Application_AddParamByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Application_GetParamValueByName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Application_GetParamValueByName(ByVal AppID As Integer, ByVal ParamDescription As String) As String
            Dim results() As Object = Me.Invoke("Application_GetParamValueByName", New Object() {AppID, ParamDescription})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Application_GetParamValueByNameAsync(ByVal AppID As Integer, ByVal ParamDescription As String)
            Me.Application_GetParamValueByNameAsync(AppID, ParamDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_GetParamValueByNameAsync(ByVal AppID As Integer, ByVal ParamDescription As String, ByVal userState As Object)
            If (Me.Application_GetParamValueByNameOperationCompleted Is Nothing) Then
                Me.Application_GetParamValueByNameOperationCompleted = AddressOf Me.OnApplication_GetParamValueByNameOperationCompleted
            End If
            Me.InvokeAsync("Application_GetParamValueByName", New Object() {AppID, ParamDescription}, Me.Application_GetParamValueByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplication_GetParamValueByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.Application_GetParamValueByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Application_GetParamValueByNameCompleted(Me, New Application_GetParamValueByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Application_GetDescByFailCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Application_GetDescByFailCode(ByVal FailCode As Integer) As String
            Dim results() As Object = Me.Invoke("Application_GetDescByFailCode", New Object() {FailCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Application_GetDescByFailCodeAsync(ByVal FailCode As Integer)
            Me.Application_GetDescByFailCodeAsync(FailCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_GetDescByFailCodeAsync(ByVal FailCode As Integer, ByVal userState As Object)
            If (Me.Application_GetDescByFailCodeOperationCompleted Is Nothing) Then
                Me.Application_GetDescByFailCodeOperationCompleted = AddressOf Me.OnApplication_GetDescByFailCodeOperationCompleted
            End If
            Me.InvokeAsync("Application_GetDescByFailCode", New Object() {FailCode}, Me.Application_GetDescByFailCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplication_GetDescByFailCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Application_GetDescByFailCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Application_GetDescByFailCodeCompleted(Me, New Application_GetDescByFailCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Application_GetDescByAVSCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Application_GetDescByAVSCode(ByVal AVSCode As String) As String
            Dim results() As Object = Me.Invoke("Application_GetDescByAVSCode", New Object() {AVSCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Application_GetDescByAVSCodeAsync(ByVal AVSCode As String)
            Me.Application_GetDescByAVSCodeAsync(AVSCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Application_GetDescByAVSCodeAsync(ByVal AVSCode As String, ByVal userState As Object)
            If (Me.Application_GetDescByAVSCodeOperationCompleted Is Nothing) Then
                Me.Application_GetDescByAVSCodeOperationCompleted = AddressOf Me.OnApplication_GetDescByAVSCodeOperationCompleted
            End If
            Me.InvokeAsync("Application_GetDescByAVSCode", New Object() {AVSCode}, Me.Application_GetDescByAVSCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplication_GetDescByAVSCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Application_GetDescByAVSCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Application_GetDescByAVSCodeCompleted(Me, New Application_GetDescByAVSCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SessionInitiateCompletedEventHandler(ByVal sender As Object, ByVal e As SessionInitiateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionInitiateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SessionInitiateVer2CompletedEventHandler(ByVal sender As Object, ByVal e As SessionInitiateVer2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionInitiateVer2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SessionVerificationCompletedEventHandler(ByVal sender As Object, ByVal e As SessionVerificationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionVerificationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SessionVerificationVer2CompletedEventHandler(ByVal sender As Object, ByVal e As SessionVerificationVer2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionVerificationVer2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SessionNotificationCompletedEventHandler(ByVal sender As Object, ByVal e As SessionNotificationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionNotificationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SessionNotificationVer2CompletedEventHandler(ByVal sender As Object, ByVal e As SessionNotificationVer2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionNotificationVer2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub AcceptBillingAddressCompletedEventHandler(ByVal sender As Object, ByVal e As AcceptBillingAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AcceptBillingAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetBillingAddressCompletedEventHandler(ByVal sender As Object, ByVal e As GetBillingAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBillingAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BFName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BLName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BAddress() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BCity() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BState() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BZip() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Amount() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),Decimal)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetBillingDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBillingDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBillingDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BFName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BLName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BAddress() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BCity() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BState() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property BZip() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Amount() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),Decimal)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OrderNumber() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAmountPaidByOrderNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GetAmountPaidByOrderNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAmountPaidByOrderNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Decimal)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetTransactionsByOrderNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionsByOrderNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionsByOrderNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetTransactionsForDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionsForDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionsForDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAppRelatedDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetAppRelatedDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAppRelatedDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetFailCodeDescByRemittanceIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetFailCodeDescByRemittanceIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFailCodeDescByRemittanceIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetFailCodeByRemittanceIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetFailCodeByRemittanceIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFailCodeByRemittanceIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAmountPaidByRemittanceIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetAmountPaidByRemittanceIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAmountPaidByRemittanceIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Decimal)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAVSCodeDescByRemittanceIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetAVSCodeDescByRemittanceIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAVSCodeDescByRemittanceIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetTransactionDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property transactiondate() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property paymentdesc() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property cardtype() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalamount() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),Decimal)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property application_desc() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property application_address() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property application_city() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property application_state() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property application_zip() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(9),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property application_phone() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(10),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub AddApplicationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Application_AddParamByIDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Application_GetParamValueByIDCompletedEventHandler(ByVal sender As Object, ByVal e As Application_GetParamValueByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Application_GetParamValueByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Application_AddParamByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Application_GetParamValueByNameCompletedEventHandler(ByVal sender As Object, ByVal e As Application_GetParamValueByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Application_GetParamValueByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Application_GetDescByFailCodeCompletedEventHandler(ByVal sender As Object, ByVal e As Application_GetDescByFailCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Application_GetDescByFailCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Application_GetDescByAVSCodeCompletedEventHandler(ByVal sender As Object, ByVal e As Application_GetDescByAVSCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Application_GetDescByAVSCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
